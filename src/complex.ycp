/****************************************************************************

Copyright (c) 2000 - 2012 Novell, Inc.
All Rights Reserved.

This program is free software; you can redistribute it and/or
modify it under the terms of version 2 of the GNU General Public License as
published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, contact Novell, Inc.

To contact Novell about this file by physical or electronic mail,
you may find current contact information at www.novell.com

****************************************************************************/
/**
 * File:	include/inetd/complex.ycp
 * Package:	Configuration of inetd
 * Summary:	Dialogs definitions
 * Authors:	Petr Hadraba <phadraba@suse.cz>
 *
 * $Id$
 */

{

textdomain "inetd";

import "Wizard";
import "Users";

import "Inetd";

include "inetd/helps.ycp";
include "inetd/routines.ycp";

/**
 * Return a modification status
 * @return true if data was modified
 */
define boolean Modified() ``{
    return Inetd::Modified();
}

/**
 * Read settings dialog
 * @return `abort if aborted and `next otherwise
 */
define symbol ReadDialog() ``{
    Wizard::RestoreHelp(HELPS["read"]:"");
    Wizard::SetScreenShotName("inetd-3-read");
    Inetd::AbortFunction = ``{ return PollAbort();};
    boolean ret = Inetd::Read();
    Users::SetGUI (false);
    Users::Read ();
    Wizard::RestoreScreenShotName();
    return ret ? `next : `abort;
}

/**
 * Write settings dialog
 * @return `abort if aborted and `next otherwise
 */
define symbol WriteDialog() ``{
    Wizard::RestoreHelp(HELPS["write"]:"");
    Wizard::SetScreenShotName("inetd-7-write");
    Inetd::AbortFunction = ``{ return PollAbort();};
    boolean ret = Inetd::Write();
    Wizard::RestoreScreenShotName();
    return ret ? `next : `abort;
}

/* EOF */
}
