/**
 * File:        testsuite/tests/routines.ycp
 * Package:     Configuration of inetd
 * Summary:     Testsuite for routines in routines.ycp and dialogs.ycp
 * Authors:     Petr Hadraba <phadraba@suse.cz>
 *
 * $Id$
 *
 * This is testsuite for routines.ycp source file.
 * These tests are checking routines implemented
 * in routines.ycp.
 *
 * Tested functions:
 *   CreateTableData()
 *   IsAnyServiceEnabled()
 */

{
    // testedfiles: routines.ycp Testsuite.ycp

import "Inetd";
import "Report";
import "Directory";

Report::DisplayErrors(false, 0);

typedef list< map<string, any> > services_t;

// make it respect Y2DIR
map exe = (map) SCR::Execute (.target.bash_output,
			      "echo -n ${Y2DIR-/usr/share/YaST2}");
string y2dir = exe["stdout"]:"";
Directory::datadir = y2dir + "/data";

// do it now, because during TEST we do not have a live SCR
Inetd::EnsureDefaultConfLoaded ();

include "testsuite.ycp";
include "inetd/routines.ycp";

services_t netd_conf = [
	$["iid": "whatever",
	    "comment": "My service",
	    "enabled": true,
	    "service": "finger",
	    "socket_type": "stream",
	    "protocol": "tcp",
	    "wait": false,
	    "user": "nobody",
	    "server": "/usr/sbin/tcpd",
	    "server_args": "in.fingerd -w"]
	];

services_t netd_conf_none = [
	$["iid": "whatever",
	    "comment": "My service",
	    "enabled": false,
	    "service": "finger",
	    "socket_type": "stream",
	    "protocol": "tcp",
	    "wait": false,
	    "user": "nobody",
	    "server": "/usr/sbin/tcpd",
	    "server_args": "in.fingerd -w"]
	];

DUMP("\nCreateTableData()\n");

TEST (``( CreateTableData(netd_conf) ), [$[],$[],$[] ], nil);

DUMP("\n  ---\n");

DUMP("\nAlmost all services are enabled\n");

DUMP(IsAnyServiceEnabled(netd_conf));

DUMP("\nIs any service enabled? (All services are disabled)\n");

DUMP(IsAnyServiceEnabled(netd_conf_none));

}
